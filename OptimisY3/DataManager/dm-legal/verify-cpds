#!/usr/bin/env ruby
#   Copyright 2013 National Technical University of Athens
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0 
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

require "base64"
require 'rexml/document'
include REXML

def verifyBCRSign(fileName)
   xmlfile = File.new(fileName)
   xmldoc = Document.new(xmlfile)

   puts "[#{fileName}] Check signature..."

   xmlfile = File.new(fileName)
   xmldoc = Document.new(xmlfile)

   bcr_text=""
   xmldoc.elements.each("tns:IaaSProvider/tns:LegalRequirements/tns:BCR/tns:BCR_Text") { |e|
     bcr_text = e.text()
    }

   File.open('.bcrtext', 'w') {|f| f.write(bcr_text) }
 
   `openssl dgst  -sha1 -out .digest .bcrtext`

   bcr_sign=""
   xmldoc.elements.each("tns:IaaSProvider/tns:LegalRequirements/tns:BCR/tns:DigitallySigned/tns:DigitalSignature") { |e|
     bcr_sign = e.text()
    }

   sign = Base64.decode64(bcr_sign)

   File.open('.signature', 'w') {|f| f.write(sign) }

   `openssl rsautl -verify -in .signature -out .verify-digest -inkey ca/pub-key.pem -pubin`

    verify_digest = File.open(".verify-digest", 'r') { |f| f.read } 
    digest = File.open(".digest", 'r') { |f| f.read } 
    
    if verify_digest == digest
       puts "Legal: signature verified successfully"
    else
       puts "ILLegal: Cannot verify signature"
       puts "#{verify_digest}\n#{digest}"
    end
    
   `rm .signature .digest .bcrtext .verify-digest`  

   50.times {print "-" }
   puts ""
end

Dir.foreach("signed_cpds/") do |f|
  f = "signed_cpds/#{f}"
  verifyBCRSign(f) if File.file?(f)
end
