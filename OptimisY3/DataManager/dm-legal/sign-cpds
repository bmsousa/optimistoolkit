#!/usr/bin/env ruby
#   Copyright 2013 National Technical University of Athens
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0 
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

require 'rexml/document'
include REXML


def makeBCRSign(fileName)
   xmlfile = File.new(fileName)
   xmldoc = Document.new(xmlfile)

   puts "[#{fileName}] BCR signing..."

   xmlfile = File.new(fileName)
   xmldoc = Document.new(xmlfile)

   bcr_text=""
   xmldoc.elements.each("tns:IaaSProvider/tns:LegalRequirements/tns:BCR/tns:BCR_Text") { |e|
     bcr_text = e.text()
    }

   File.open('.bcrtext', 'w') {|f| f.write(bcr_text) }

   `openssl dgst  -sha1 -out .digest .bcrtext`
   `openssl rsautl -sign -in .digest -out .signature -inkey ca/key.pem`

   sign = `base64 .signature`

   `rm .signature .digest .bcrtext`
  
    unsigned_cpd = File.open(fileName, 'r') { |f| f.read } 
    unsigned_cpd.sub!("${BCR_DIGITAL_SIGNATURE}", sign)
    signed_cpd = "signed_cpds/" + File.basename(fileName)

    File.open(signed_cpd, 'w') {|f| f.write(unsigned_cpd) }
end

`rm -rf signed_cpds`
`mkdir signed_cpds`

Dir.foreach("cpds/") do |f|
  f = "cpds/#{f}"
  makeBCRSign(f) if File.file?(f)
end
